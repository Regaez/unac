:root {
  --measure: 80ch;
  --text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.75);
  --border-radius: 2px;
  --x-color: oklch(0.58 0.13 243);
  --x-color-dark: oklch(0.44 0.13 243);
  --o-color: oklch(0.52 0.2 28);
  --o-color-dark: oklch(0.38 0.2 28);
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
}

@property --glow-deg {
  syntax: "<angle>";
  inherits: true;
  initial-value: -90deg;
}

@property --bg-a {
  syntax: "<color>";
  inherits: true;
  initial-value: #1d81c0;
}

@property --bg-a {
  syntax: "<color>";
  inherits: true;
  initial-value: #005793;
}

@view-transition {
  navigation: auto;
}

html {
  font-family:
    -apple-system,
    BlinkMacSystemFont,
    avenir next,
    avenir,
    segoe ui,
    helvetica neue,
    helvetica,
    Cantarell,
    Ubuntu,
    roboto,
    noto,
    arial,
    sans-serif;
}

body {
  min-height: 100%;
  margin: 0;
  color: white;
}

@keyframes slide {
  0% {
    transform: translateX(-25%);
  }
  100% {
    transform: translateX(25%);
  }
}

.background {
  content: "";
  position: fixed;
  inset: -50%;
  opacity: 1;
  z-index: -1;
  background-image: linear-gradient(-60deg, var(--bg-a) 50%, var(--bg-b) 50%);
  animation: slide 300s ease-in-out infinite alternate;
  transition:
    --bg-a 1s ease-out,
    --bg-b 1s ease-out;
}

@media screen and (prefers-reduced-motion: reduce) {
  .background {
    animation-play-state: paused;
  }
}

.background:not(:first-of-type) {
  opacity: 0.5;
}

.background:nth-of-type(2) {
  animation-direction: alternate-reverse;
  animation-delay: -60s;
  animation-duration: 310s;
}

.background:nth-of-type(3) {
  animation-delay: -90s;
  animation-duration: 320s;
}

.background:nth-of-type(4) {
  animation-direction: alternate-reverse;
  animation-delay: -120s;
  animation-duration: 330s;
}

:has([data-player="X"]) .background {
  --bg-a: #1d81c0;
  --bg-b: #005793;
}

:has([data-player="O"]) .background {
  --bg-a: #c21919;
  --bg-b: #900000;
}

main {
  --padding: min(5vw, 2em);
  max-width: min(100%, calc(600px + (4 * var(--padding))));
  margin: 2em auto;
  padding: var(--padding);
}

#game {
  position: relative;
  margin-block: 1em;
  padding: var(--padding);
  margin: auto;
  isolation: isolate;

  &::before,
  &::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 5px;
  }

  &::before {
    border: 2px solid oklch(0 0 0 / 0.1);
  }

  &::after {
    background: oklch(0 0 0 / 0.15);
    z-index: -1;
    filter: blur(4px);
  }
}

h1,
h2 {
  font-weight: 300;
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: min(calc(100vw * 0.33), 200px);
  max-width: min(100vw, 600px);
  background: #333;
  border-radius: var(--border-radius);
}

.controls {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.controls form {
  margin: 0;
}

.board {
  position: relative;
  display: grid;
  gap: 3px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  border-radius: var(--border-radius);
}

.cell {
  display: flex;
  justify-content: center;
  align-items: center;
  background: white;
  font-size: min(7vw, 3em);
  font-weight: bold;
  border-radius: var(--border-radius);
  color: white;
  transition: background ease-out 300ms;
  user-select: none;
}

.cell.x,
.board.x .cell {
  background: var(--x-color);
}

.cell.o,
.board.o .cell {
  background: var(--o-color);
}

/* h2.x { */
/* color: #1982c4; */
/* } */

/* h2.o { */
/* color: #c41919; */
/* } */

button.cell {
  background: oklch(0.85 0.06 141.84);
  border: 0;
  cursor: pointer;

  [data-player="X"] &:not([disabled]):hover {
    background: oklch(0.75 0.13 243.45);
  }

  [data-player="O"] &:not([disabled]):hover {
    background: oklch(0.72 0.15 22);
  }

  &[disabled] {
    cursor: wait;
  }
}

#game:has(button.cell:nth-child(1):where(:hover, :focus-visible))
  .board:nth-child(1):not(.won, .draw),
#game:has(button.cell:nth-child(2):where(:hover, :focus-visible))
  .board:nth-child(2):not(.won, .draw),
#game:has(button.cell:nth-child(3):where(:hover, :focus-visible))
  .board:nth-child(3):not(.won, .draw),
#game:has(button.cell:nth-child(4):where(:hover, :focus-visible))
  .board:nth-child(4):not(.won, .draw),
#game:has(button.cell:nth-child(5):where(:hover, :focus-visible))
  .board:nth-child(5):not(.won, .draw),
#game:has(button.cell:nth-child(6):where(:hover, :focus-visible))
  .board:nth-child(6):not(.won, .draw),
#game:has(button.cell:nth-child(7):where(:hover, :focus-visible))
  .board:nth-child(7):not(.won, .draw),
#game:has(button.cell:nth-child(8):where(:hover, :focus-visible))
  .board:nth-child(8):not(.won, .draw),
#game:has(button.cell:nth-child(9):where(:hover, :focus-visible))
  .board:nth-child(9):not(.won, .draw),
#game:has(button.cell:nth-child(1):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(1))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(2):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(2))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(3):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(3))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(4):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(4))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(5):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(5))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(6):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(6))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(7):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(7))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(8):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(8))
  .board:not(.won, .draw),
#game:has(button.cell:nth-child(9):where(:hover, :focus-visible))
  .grid:has(.board.won:nth-child(9))
  .board:not(.won, .draw) {
  --opacity: 1;
}

.board {
  position: relative;
  border-radius: var(--border-radius);
  padding: 4px;
  isolation: isolate;
}

.board::before,
.board::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: var(--opacity, 0);
  transition: opacity ease-out 300ms;
  background: conic-gradient(
    from var(--glow-deg),
    #3a71ff,
    #1982c4,
    #00f6f9,
    #3a71ff
  );
  background-size: 400%;
  z-index: -1;
  animation: glow 8s linear infinite;
  width: 100%;
  border-radius: var(--border-radius);
}

[data-player="X"] .board::before,
[data-player="X"] .board::after {
  background: conic-gradient(
    from var(--glow-deg),
    #ff863a,
    #c92626,
    #f90095,
    #ff863a
  );
  background-size: 400%;
}

.board::after {
  filter: blur(8px);
  transform: translate3d(0, 0, 0); /* For Safari */
}

@keyframes glow {
  100% {
    --glow-deg: 270deg;
  }
}
