/* 
LAYOUT: Box
@name layout-box
@description Wherever content needs to be deliberately obscured, the Imposter pattern is your friend. It may be that the content is yet to be made available. In which case, the Imposter may consist of a call-to-action to unlock that content.
@link https://every-layout.dev/layouts/grid/

--- CSS VARIABLES ---
 
@var --box-color-foreground
@default inherit
@description When not inverted, this represents the color of the contents within the box.

@var --box-color-background
@default transparent
@description When not inverted, this represents the background color of the box.

@var --box-spacing
@default 0
@description Adjusts the padding within the box.

--- PROPS ---

@prop inverted
@description If attribute exists, it swaps how --box-color-foreground and --box-color-background are applied.

--- USAGE ---

@example Default.

<layout-box>
  <!-- content -->
</layout-grid> 

@example Override CSS variable values with style attribute.

<layout-grid style="--grid-spacing: 2rem;">
  <div><!-- item --></div>
  <div><!-- item --></div>
  <div><!-- item --></div>
</layout-grid>

*/
layout-box {
  --box-color-foreground: inherit;
  --box-color-background: transparent;
  --box-spacing: 0;
  --box-border-width: 0;
  --box-outline-width: 0.25em;
  display: block;
  padding: var(--box-spacing);
  border: var(--box-border-width) solid;
  outline: var(--box-outline-width) solid transparent;
  outline-offset: calc(var(--box-outline-width) * -1);
  color: var(--box-color-foreground);
  background-color: var(--box-color-background);
}

/* layout-box *:not(layout-box) { */
  /* color: inherit; */
/* } */

layout-box[inverted] {
  color: var(--box-color-background);
  background-color: var(--box-color-foreground);
}
